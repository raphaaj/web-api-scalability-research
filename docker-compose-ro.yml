networks:
  network-ro:

volumes:
  web-api-scalability-research_prometheus-data:
    external: true
  web-api-scalability-research_grafana-data:
    external: true

services:
  prometheus:
    image: prom/prometheus:v3.3.1
    restart: unless-stopped
    mem_limit: '1gb'
    memswap_limit: '1gb'
    cpus: '1.0'
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.enable-remote-write-receiver'
      - '--enable-feature=native-histograms'
      - '--storage.tsdb.retention.time=2y'
    volumes:
      - ./prometheus/prometheus-ro.yml:/etc/prometheus/prometheus.yml:ro
      - web-api-scalability-research_prometheus-data:/prometheus
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9090/-/ready"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - network-ro
    ports:
      - 8004:9090
  
  grafana:
    image: grafana/grafana-oss:12.0.0
    restart: unless-stopped
    mem_limit: '1gb'
    memswap_limit: '1gb'
    cpus: '1.0'
    volumes:
      - web-api-scalability-research_grafana-data:/var/lib/grafana
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000/api/health"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      prometheus:
        condition: service_healthy
    networks:
      - network-ro
    ports:
      - 8005:3000